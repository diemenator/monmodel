# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.duration import Duration  # noqa: F401,E501
from swagger_server import util


class AlertDefaults(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, wait: Duration=None, repeat: Duration=None):  # noqa: E501
        """AlertDefaults - a model defined in Swagger

        :param wait: The wait of this AlertDefaults.  # noqa: E501
        :type wait: Duration
        :param repeat: The repeat of this AlertDefaults.  # noqa: E501
        :type repeat: Duration
        """
        self.swagger_types = {
            'wait': Duration,
            'repeat': Duration
        }

        self.attribute_map = {
            'wait': 'wait',
            'repeat': 'repeat'
        }
        self._wait = wait
        self._repeat = repeat

    @classmethod
    def from_dict(cls, dikt) -> 'AlertDefaults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlertDefaults of this AlertDefaults.  # noqa: E501
        :rtype: AlertDefaults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def wait(self) -> Duration:
        """Gets the wait of this AlertDefaults.


        :return: The wait of this AlertDefaults.
        :rtype: Duration
        """
        return self._wait

    @wait.setter
    def wait(self, wait: Duration):
        """Sets the wait of this AlertDefaults.


        :param wait: The wait of this AlertDefaults.
        :type wait: Duration
        """

        self._wait = wait

    @property
    def repeat(self) -> Duration:
        """Gets the repeat of this AlertDefaults.


        :return: The repeat of this AlertDefaults.
        :rtype: Duration
        """
        return self._repeat

    @repeat.setter
    def repeat(self, repeat: Duration):
        """Sets the repeat of this AlertDefaults.


        :param repeat: The repeat of this AlertDefaults.
        :type repeat: Duration
        """

        self._repeat = repeat
