# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.duration import Duration  # noqa: F401,E501
from swagger_server import util


class Alert(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, wait: Duration=None, repeat: Duration=None, name: str=None, text: str=None, teams: List[str]=None):  # noqa: E501
        """Alert - a model defined in Swagger

        :param wait: The wait of this Alert.  # noqa: E501
        :type wait: Duration
        :param repeat: The repeat of this Alert.  # noqa: E501
        :type repeat: Duration
        :param name: The name of this Alert.  # noqa: E501
        :type name: str
        :param text: The text of this Alert.  # noqa: E501
        :type text: str
        :param teams: The teams of this Alert.  # noqa: E501
        :type teams: List[str]
        """
        self.swagger_types = {
            'wait': Duration,
            'repeat': Duration,
            'name': str,
            'text': str,
            'teams': List[str]
        }

        self.attribute_map = {
            'wait': 'wait',
            'repeat': 'repeat',
            'name': 'name',
            'text': 'text',
            'teams': 'teams'
        }
        self._wait = wait
        self._repeat = repeat
        self._name = name
        self._text = text
        self._teams = teams

    @classmethod
    def from_dict(cls, dikt) -> 'Alert':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Alert of this Alert.  # noqa: E501
        :rtype: Alert
        """
        return util.deserialize_model(dikt, cls)

    @property
    def wait(self) -> Duration:
        """Gets the wait of this Alert.


        :return: The wait of this Alert.
        :rtype: Duration
        """
        return self._wait

    @wait.setter
    def wait(self, wait: Duration):
        """Sets the wait of this Alert.


        :param wait: The wait of this Alert.
        :type wait: Duration
        """

        self._wait = wait

    @property
    def repeat(self) -> Duration:
        """Gets the repeat of this Alert.


        :return: The repeat of this Alert.
        :rtype: Duration
        """
        return self._repeat

    @repeat.setter
    def repeat(self, repeat: Duration):
        """Sets the repeat of this Alert.


        :param repeat: The repeat of this Alert.
        :type repeat: Duration
        """

        self._repeat = repeat

    @property
    def name(self) -> str:
        """Gets the name of this Alert.


        :return: The name of this Alert.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Alert.


        :param name: The name of this Alert.
        :type name: str
        """

        self._name = name

    @property
    def text(self) -> str:
        """Gets the text of this Alert.


        :return: The text of this Alert.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this Alert.


        :param text: The text of this Alert.
        :type text: str
        """

        self._text = text

    @property
    def teams(self) -> List[str]:
        """Gets the teams of this Alert.


        :return: The teams of this Alert.
        :rtype: List[str]
        """
        return self._teams

    @teams.setter
    def teams(self, teams: List[str]):
        """Sets the teams of this Alert.


        :param teams: The teams of this Alert.
        :type teams: List[str]
        """

        self._teams = teams
